name: Create Release Note

on:
  pull_request:
    branches:
      - bump-version-v**
    types:
      - closed

jobs:
  create-release-draft:
    name: Create release draft
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      # ----------------------------------------------
      # 1. Get the latest release branch
      # ----------------------------------------------
      - name: Get latest release branch
        id: get-latest-release-branch
        run:
          target_branch=$(git branch --sort=-committerdate -a | grep remotes/origin/release/ | head -n 1 | sed 's/ //g' | sed 's/remotes\/origin\///g')
          echo "::set-output name=branch::$(echo $target_branch)\n"

      # ----------------------------------------------
      # 2. Checkout latest release branch
      # ----------------------------------------------
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.get-latest-release-branch.outputs.branch }}

      # ----------------------------------------------
      # 3. Setup Node environment
      # ----------------------------------------------
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      # ----------------------------------------------
      # 4. Get release tag
      # ----------------------------------------------
      - name: Get release tag
        id: get-release-tag
        run: |
          RELEASE_TAG=$(node -e "console.log(require('./package.json').version)")
          echo "::set-output name=tag::$RELEASE_TAG"

      # ----------------------------------------------
      # 5. Get latest tag
      # ----------------------------------------------
      - name: Get latest tag
        id: get-latest-tag
        continue-on-error: true
        run: |
          LATEST_TAG=$(git tag -l --sort -v:refname | sed -n 1p)
          echo "::set-output name=tag::$LATEST_TAG"

      # ----------------------------------------------
      # 6. Generate changelog
      # ----------------------------------------------
      - name: Generate changelog
        id: changelog
        run: |
          changelog=$(gh api repos/$GITHUB_REPOSITORY/releases/generate-notes \
            -f tag_name="v${{ steps.get-release-tag.outputs.tag }}" \
            -f target_commitish=main \
            -f previous_tag_name="${{ steps.get-latest-tag.outputs.tag }}" | jq -r ".body")
          body=$changelog
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=body::$body"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ----------------------------------------------
      # 7. Create release note
      #    -n ==> notes
      #    -d ==> draft
      # ----------------------------------------------
      - name: Create release note
        run: |
          RELEASE_TAG="${{ steps.get-release-tag.outputs.tag }}"
          TARGET_BRANCH="${{ steps.get-latest-release-branch.outputs.branch }}"
          NOTE="${{ steps.changelog.outputs.body }}"

          gh release create v$RELEASE_TAG --target $TARGET_BRANCH -n $NOTE -d
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
